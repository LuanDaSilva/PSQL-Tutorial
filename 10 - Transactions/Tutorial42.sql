/*Transactions
 Uma transação em um banco 
 de dados é uma unidade de 
 trabalho que consiste em uma 
 ou mais operações.

 O exemplo mais básico de transação
 é uma transferência bancária 
 de uma conta para outra. Uma
 transação completa deve assegurar
 um equilíbrio entre a conta
 do remetente e a do destinatário.
 Se a transferência for de X,
 o recebedor terá X, sem mais nem
 menos.

 O Postgres é reconhecido por ser
 atômico, consistente, isolado
 e durável, o que geralmente
 é resumido pelo acrônimo ACID.

 A atomicidade garante que a
 transação se cumpra num esquema
 de tudo-ou-nada.

 A consistência garante que 
 a mudança dos dados escritos
 na base tenha que ser 
 válida e seguir regras predefinidas.

 O isolamento determina que a integri
 dade da transação é visível a 
 outras transações

 A durabilidade garante que 
 as transações que sejam 
 confirmada serão guardadas
 permanentemente.

*/

DROP TABLE IF EXISTS accounts;

CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    balance DEC(15,2) NOT NULL,
    PRIMARY KEY(id)
);


INSERT INTO accounts(name,balance)
VALUES('Bob',10000);

/*Começando uma transação*/
/* BEGIN TRANSACTION| BEGIN WORK | BEGIN*/
/* Encerrando uma transação*/
/*COMMIT WORK | COMMIT TRANSACTION | COMMIT*/
/*Cancelando uma transação*/
/*ROLLBACK WORK | ROLLBACK TRANSACTION | ROLLBACK*/

BEGIN;

    INSERT INTO accounts(name,balance)
    VALUES('Alice',10000);

COMMIT;
/*
SELECT 
    id,
    name,
    balance
FROM 
    accounts;
BEGIN;
    UPDATE accounts
    SET balance = balance - 1000
    WHERE id = 1;
    UPDATE accounts
    SET balance = balance + 1000
    WHERE id = 2;
COMMIT;
*/
INSERT INTO accounts(name,balance)
VALUES('Jack',0);
BEGIN;
    UPDATE accounts
    SET balance = balance + 1500
    WHERE id = 3;
SELECT * FROM accounts;

ROLLBACK;

SELECT * FROM accounts;

DROP TABLE accounts;